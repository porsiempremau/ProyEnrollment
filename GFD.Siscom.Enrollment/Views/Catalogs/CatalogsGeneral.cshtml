@model Object
@using Newtonsoft.Json;
@{
    dynamic data = JsonConvert.DeserializeObject(JsonConvert.SerializeObject(Model));
    var typeServices = JsonConvert.DeserializeObject<List<TypeServicesGralVM>>(JsonConvert.SerializeObject(data["data"]));
    var type = data["type"];
}

<div class="app-page-title">
    <div class="page-title-wrapper">
        <div class="page-title-heading">
            <div class="page-title-icon">
                <i class="pe-7s-medal icon-gradient bg-tempting-azure">
                </i>
            </div>
            <div>
                Catálogo @ViewData["Title"]
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <button type="button" class="btn btn-GFD float-right" data-toggle="modal" data-target="#modalCreateEdit" onclick="openModalToCreate('@data["type"]')">
            Agregar Nuevo
            <i class="fas fa-plus" title="Agregar Nuevo"></i>
        </button>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-12">
        <div class="main-card mb-3 card">
            <div class="card-body">
                <table style="width: 100%;" id="TableTypeServices" class="table table-hover table-striped table-bordered">
                    <thead class="style-theads">
                        <tr>
                            <th width="45%">Descripción</th>
                            <th width="45%">Status</th>
                            <th width="10%"></th>
                        </tr>
                    </thead>
                    <tbody id="tbody">
                        @{
                            foreach (var item in typeServices)
                            {
                                <tr>
                                    <td>@item.Name</td>
                                    <td>@(item.IsActive.ToString() == "True" ? "Activo" : "Inactivo")</td>
                                    <td>
                                        <a class="nav-link btn-flush" onclick="openModalEdit('@data["type"]', @item.Id)" data-toggle="modal" data-target="#modalCreateEdit" type="button"
                                           data-caret="false" style="margin: 0 auto;">
                                            <i class="far fa-edit" title="Editar"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <div class="modal fade" id="modalCreateEdit" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modalHeader" style="background-color:#036681;padding: 1rem;">
                    <div class="row">
                        <div class="col-xs-6 col-sm-7 col-md-10 col-lg-10">
                            <p id="TitleModal" class="subtitle bold white-color" style="margin-bottom: 0px;"></p>
                        </div>
                        <div class="col-xs-6 col-sm-5 col-md-2 col-lg-2" style="float:right;">
                            <button type="button" style="color: white;" class="close" data-dismiss="modal">&times;</button>
                        </div>
                    </div>
                </div>
                <div class="modal-body">
                    <form id="FormData" onsubmit="CreateEdit(event, '@data["type"]')">
                        <div class="row" id="ContentModal"></div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-GFD" form="FormData">Guardar</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        window.onload = function () {
            Block();
            setTimeout(() => {
                loadDataTable("TableTypeServices");
                UnBlock();
            }, 1700)
        }

        function openModalEdit(type, id) {
            Block();
            $("#ContentModal").html("");
            axios.get("/CatalogTypes/GetOne?type=" + type + "&id=" + id).then(response => {
                $("#TitleModal").html("Modificar");
                var data = response.data
                var isActiveHTML = "";
                if (type != "TypeClassifications") {
                    isActiveHTML = `
                        <div class="col-md-12">
                            <label>Status:</label>
                            <select id="isActive" name="isActive" class="form-control">
                                <option value="true" ${data.isActive ? "selected" : ""}>Activo</option>
                                <option value="false" ${!data.isActive ? "selected" : ""}>Inactivo</option>
                            </select>
                        </div>
                    `;
                } else {
                    isActiveHTML = "";
                }

                $("#ContentModal").append(`
                    <div class="col-md-6">
                        <label>Id:</label>
                        <input class="form-control" id="ID" name="ID" value="${data.id}" readonly/>
                    </div>
                    <div class="col-md-6" id="divName">
                        <label>Nombre:</label>
                        <input class="form-control" id="name" name="name" value="${data.name}"/>
                    </div>
                    ${isActiveHTML}
                `);

                if (type == "TypeRegimes" || type == "TypeUses"
                    || type == "TypeCommertialBusinesses" || type == "TypeClassifications") {
                    $("#ContentModal").append(`
                        <div class="col-md-12">
                            <label>Acrónimo Toma:</label>
                            <select id="intakeAcronym" name="intakeAcronym" class="form-control"></select>
                        </div>
                    `);
                    FillSelectAcronymIntake("intakeAcronym", data.intakeAcronym);
                }

                if (type == "TypeConsumes") {
                    $("#ContentModal").append(`
                        <div class="col-md-12">
                            <label>Acrónimo:</label>
                            <select id="acronym" name="acronym" class="form-control"></select>
                        </div>
                    `);
                    FillSelectAcronymIntake("acronym", data.acronym);
                }

                if (type == "TypeIntakes") {
                    $("#ContentModal").append(`
                        <div class="col-md-6">
                            <label>Acrónimo:</label>
                            <input class="form-control" id="acronym" name="acronym" value="${data.acronym}"/>
                        </div>
                    `);
                }

                if (type == "TypeCommertialBusinesses") {
                    $("#ContentModal").append(`
                        <div class="col-md-12">
                            <label>Clasificación de Grupo:</label>
                            <input type="number" class="form-control" id="clasificationGroup" name="clasificationGroup" value="${data.clasificationGroup}"/>
                        </div>
                    `);
                }

                if (type == "Diameters") {
                    $("#ContentModal").append(`
                        <div class="col-md-12">
                            <label>Descripción:</label>
                            <input class="form-control" id="description" name="description" value="${data.description}"/>
                        </div>
                    `);
                }
                UnBlock();
            }).catch(error => {
                UnBlock();
            })
        }

        function openModalToCreate(type) {
            Block();
            $("#ContentModal").html("");
            $("#TitleModal").html("Agregar");
            var isActiveHTML = "";
            if (type != "TypeClassifications") {
                isActiveHTML = `
                    <div class="col-md-12">
                        <label>Status:</label>
                        <select id="isActive" name="isActive" class="form-control">
                            <option value="true">Activo</option>
                            <option value="false">Inactivo</option>
                        </select>
                    </div>
                `;
            } else {
                isActiveHTML = "";
            }

            $("#ContentModal").append(`
                <div class="col-md-12" id="divName">
                    <label>Nombre:</label>
                    <input class="form-control" id="name" name="name"/>
                </div>
                ${isActiveHTML}
            `);

            if (type == "TypeRegimes" || type == "TypeUses"
                || type == "TypeCommertialBusinesses" || type == "TypeClassifications") {
                $("#ContentModal").append(`
                    <div class="col-md-12">
                        <label>Acrónimo Toma:</label>
                        <select id="intakeAcronym" name="intakeAcronym" class="form-control"></select>
                    </div>
                `);
                FillSelectAcronymIntake("intakeAcronym", "");
            }

            if (type == "TypeConsumes") {
                $("#ContentModal").append(`
                    <div class="col-md-12">
                        <label>Acrónimo:</label>
                        <select id="acronym" name="acronym" class="form-control"></select>
                    </div>
                `);
                FillSelectAcronymIntake("acronym", "");
            }

            if (type == "TypeIntakes") {
                $("#ContentModal").append(`
                    <div class="col-md-6">
                        <label>Acrónimo:</label>
                        <input class="form-control" id="acronym" name="acronym" maxlength="2"/>
                    </div>
                `);
            }

            if (type == "TypeCommertialBusinesses") {
                $("#ContentModal").append(`
                    <div class="col-md-12">
                        <label>Clasificación de Grupo:</label>
                        <input type="number" class="form-control" id="clasificationGroup" name="clasificationGroup" min="0"/>
                    </div>
                `);
            }

            if (type == "Diameters") {
                $("#ContentModal").append(`
                    <div class="col-md-12">
                        <label>Descripción:</label>
                        <input class="form-control" id="description" name="description"/>
                    </div>
                `);
            }
            UnBlock();
        }

        function FillSelectAcronymIntake(idSelect, value) {
            axios.get('/CatalogTypes/Get?type=TypeIntakes&name=TypeIntake&isToSelect=true').then(response => {
                var data = response.data;
                data.forEach(x => {
                    var option = document.createElement("option");
                    option.text = x.acronym;
                    option.value = x.acronym;
                    if (x.acronym == value) {
                        option.selected = true
                    }
                    $("#" + idSelect).append(option);
                });
            }).catch(error => { })
        }

        function CreateEdit(event, type) {
            event.preventDefault();
            Block();
            var form = document.querySelector("#FormData");
            var data = serialize(form);
            axios.post("/CreateAndEditCatalog?type=" + type, data).then(response => {
                UnBlock();
                Swal.fire({
                    title: "Bien",
                    text: response.data,
                    type: 'success',
                    showConfirmButton: true,
                }).then(response => {
                    $("#modalCreateEdit").hide();
                    $(".modal-backdrop").hide();
                    window.location.href = "/CatalogTypes/Get?type=" + type + "&name=" + '@ViewData["Title"]' + "&isToSelect=false"
                });
            }).catch(error => {
                UnBlock();
                Swal.fire({
                    title: "Disculpa",
                    text: error.data,
                    type: 'info',
                    showConfirmButton: true,
                })
            })
        }
    </script>


}


