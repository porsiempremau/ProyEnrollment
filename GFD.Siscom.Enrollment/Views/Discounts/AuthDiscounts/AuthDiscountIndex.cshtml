@using GFD.Siscom.Enrollment.Utilities.Auth;
<div class="app-page-title">
    <div class="page-title-wrapper">
        <div class="page-title-heading">
            <div class="page-title-icon">
                <i class="fas fa-paste">
                </i>
            </div>
            <h1 class="style-main-title">@ViewData["Title"]</h1>
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-12">
        <div class="main-card mb-3 card">
            <div class="card-body">
                <table style="width: 100%;" id="TableDiscountToAuth" class="table table-hover table-striped table-bordered">
                    <thead class="style-theads">
                        <tr>
                            <th>Cuenta</th>
                            <th>Monto</th>
                            <th>Monto Descontado</th>
                            <th>Solicitado</th>
                            <th>Sucursal</th>
                            <th>Archivo</th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="tbodyDiscountToAuth">
                        @*<tr>
                            <td colspan="7" style="font-size: 20px; text-align: center">Sin Datos</td>
                        </tr>*@
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section Scripts{ 
    <script>
        var __ListDiscountToAuth = [];

        window.onload = function () {
            GetDiscountToAuth();
        }

        function GetDiscountToAuth() {
            Block();
            ClearDataTable("TableDiscountToAuth");
            $("#tbodyDiscountToAuth").html("");
            axios.get("/Discounts/GetDiscountsToAuth").then(response => {
                UnBlock();
                __ListDiscountToAuth = response.data;
                console.log("List Discount to auth: ", __ListDiscountToAuth);
                if (__ListDiscountToAuth.length > 0) {
                    __ListDiscountToAuth.forEach(x => {
                        var discount = new AuthDiscount(x);
                        $("#tbodyDiscountToAuth").append(`
                            <tr>
                                <td>${discount.account}</td>
                                <td>${FormatoPeso.format(discount.amount)}</td>
                                <td>${FormatoPeso.format(discount.amountDiscount)}</td>
                                <td>${discount.nameUserResponse}</td>
                                <td>${discount.branchOffice}</td>
                                <td>${discount.fileName}</td>
                                <td>
                                    <a class="nav-link btn-flush" onclick="QuestionAuthorize(${discount.id}, false)" data-caret="false" style="margin: 0 auto;">
                                        <i class="fas fa-vote-yea iconX" title="Autorizar"></i>
                                    </a>
                                </td>
                                <td>
                                    <a class="nav-link btn-flush" onclick="QuestionAuthorize(${discount.id}, true)" data-caret="false" style="margin: 0 auto;">
                                        <i class="fas fa-ban iconX" title="Cancelar"></i>
                                    </a>
                                </td>
                            </tr>
                        `);
                    });
                } else {
                    $("#tbodyDiscountToAuth").append(`
                            <tr>
                                <td colspan="7" style="font-size: 20px; text-align: center">Datos no encontrados</td>
                            </tr>
                        `);
                }

                if (data.length > 10) {
                    loadDataTable("TableDiscountToAuth");
                }
            }).catch(error => {
                UnBlock();
                Swal.fire({
                    title: "Disculpa",
                    text: 'Ocurrió un problema: ' + error.response.request.response,
                    type: 'info',
                    showConfirmButton: true,
                });
                console.error(error.response);
            });
        }

        function QuestionAuthorize(idDiscount, isCancel) {
            var mesagge = "¿Está seguro que desea autorizar esta solicitud?";
            var textConfirmBtn = "Autorizar Solicitud";
            if (isCancel) {
                mesagge = "¿Está seguro que desea cancelar esta soicutud?";
                textConfirmBtn = "Cancelar Solicitud";
            }
            Swal.fire({
                title: mesagge,
                icon: 'info',
                showCancelButton: true,
                cancelButtonText: 'Cancelar',
                confirmButtonText: textConfirmBtn,
                input: 'text'
            }).then(response => {
                //console.log(response);
                if (response.isConfirmed && response.value == "") {
                    Swal.fire("Necesitas agregar una descripción");
                }

                if (response.isConfirmed && response.value != "") {
                    Authorize(idDiscount, response.value, isCancel);
                }
            });
        }

        function Authorize(idDiscount, description, isCancel) {
            Block();
            var item = __ListDiscountToAuth.find(x => x.id == idDiscount);
            var discount = new AuthDiscount(item);
            var discountToAuth = {
                id: discount.id,
                key: discount.keyFirebase,
                userId: discount.userAuthorizationId,
                responseObservations: description,
                status: isCancel ? "EDE03" : "EDE02"
            }
            axios.post("/Discounts/PostDiscountsToAuth?id=" + discountToAuth.id, discountToAuth).then(response => {
                UnBlock();
                Swal.fire({
                    icon: 'success',
                    title: 'Bien',
                    text: 'Se autorizado correctamente',
                    showConfirmButton: true
                });
            }).catch(error => {
                UnBlock();
                Swal.fire({
                    icon: 'info',
                    title: 'Disculpa',
                    text: 'Ocurrió un problema: ' + error.response.request.response,
                    showConfirmButton: true
                });
                console.error(error.response);
            });
        }
    </script>
}