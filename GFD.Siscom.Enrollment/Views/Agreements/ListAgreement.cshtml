@model object
@using Newtonsoft.Json;
@{
    dynamic data = JsonConvert.DeserializeObject<object>(JsonConvert.SerializeObject(Model));
    var typePage = data["page"];
}

<style>
    .swal2-container {
        zoom: 1.0 !important;
    }
</style>
<div class="app-page-title">
    <div class="page-title-wrapper">
        <div class="page-title-heading">
            <div class="page-title-icon">
                <i class="fas fa-paste">
                </i>
            </div>
            <h1 class="style-main-title">@ViewData["Title"]</h1>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-3">
        <label>Nombre:</label>
        <input type="text" id="name" name="name" class="form-control" onblur="LimpiarCampos('name')" />
    </div>
    <div class="col-md-2">
        <label>Cuenta:</label>
        <input type="text" id="account" name="account" class="form-control" onblur="LimpiarCampos('account')" />
    </div>
    <div class="col-md-2">
        <label>RFC:</label>
        <input type="text" id="rfc" name="rfc" class="form-control" onblur="LimpiarCampos('rfc')" />
    </div>
    <div class="col-md-3">
        <label>Dirección:</label>
        <input type="text" id="address" name="address" class="form-control" onblur="LimpiarCampos('address')" />
    </div>
    <div class="col-md-2">
        <button type="button" class="btn btn-GFD margin-top-btns" data-toggle="modal" onclick="getAgreement()">
            Buscar
        </button>
    </div>
</div>
<br />
<br />
<div class="row">
    <div class="col-md-12">
        @if (typePage == "agreements")
        {
        <a type="button" class="btn btn-GFD float-right style-btn-agregar-nuevo" href="/Agreement/EditCreateView">
            <i class="fas fa-plus-circle" title="Agregar Nuevo"></i>
            Agregar Nuevo
        </a>
        }
        else
        {
            <a type="button" class="btn btn-GFD float-right style-btn-agregar-nuevo" href="/Discounts/ViewDiscountVulnerable">
                <i class="fas fa-plus-circle" title="Agregar Nuevo"></i>
                Agregar Descuento
            </a>
        }

    </div>
</div>
<br />
<div class="row">
    <div class="col-md-12">
        <div class="main-card mb-3 card">
            <div class="card-body">
                <table style="width: 100%;" id="TableAgreement" class="table table-hover table-striped table-bordered">
                    <thead class="style-theads">
                        <tr>
                            <th>Cuenta</th>
                            <th>Nombre</th>
                            @if (typePage == "agreements")
                            {
                                <th>Dirección</th>
                            }
                            <th>Status</th>
                            <th>Tipo Contrato</th>
                            @if (typePage == "agreements")
                            {
                                <th>Folio</th>
                            }
                            <th>Descuento</th>
                            <th>Tipo Descuento</th>
                            @if (typePage == "discounts")
                            {
                                <th>Vigencia</th>
                                <th>Con Descuento</th>
                            }
                            <th></th>
                            @if (typePage == "agreements")
                            {
                                <th></th>
                                <th></th>
                            }
                        </tr>
                    </thead>
                    <tbody id="tbody">
                        <tr>
                            @if (typePage == "agreements")
                            {
                                <td colspan="11" style="font-size: 20px; text-align: center">Sin Datos</td>
                            }
                            else
                            {
                                <td colspan="9" style="font-size: 20px; text-align: center">Sin Datos</td>
                            }

                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<button type="button" id="btnModalDebts" data-toggle="modal" data-target="#modalDebtAgreement" style="display: none;"></button>
<button type="button" id="btnDebtDetails" data-toggle="modal" data-target="#modalDebtAgreementDetails" style="display: none;"></button>

@section Scripts {
    <partial name="~/Views/Agreements/_ModalDebtsFromAgreement.cshtml" />
    <script>
        var __ListDebts = [];

        window.onload = function () {

        }

        function LimpiarCampos(element) {
            var name = document.getElementById("name"),
                account = document.getElementById("account"),
                rfc = document.getElementById("rfc"),
                address = document.getElementById("address");
            if (element == "name") {
                account.value = "";
                rfc.value = "";
                address.value = "";
            }
            if (element == "account") {
                name.value = "";
                rfc.value = "";
                address.value = "";
            }
            if (element == "rfc") {
                name.value = "";
                account.value = "";
                address.value = "";
            }
            if (element == "address") {
                name.value = "";
                account.value = "";
                rfc.value = "";
            }
        }

        function getAgreement() {
            Block();
            ClearDataTable("TableAgreement");
            var name = document.getElementById("name").value,
                account = document.getElementById("account").value,
                rfc = document.getElementById("rfc").value,
                address = document.getElementById("address").value,
                query = "",
                colspan = 11;

            if (name != "") {
                query = "?name=" + name;
            }
            if (account != "") {
                query = "?account=" + account;
            }
            if (rfc != "") {
                query = "?rfc=" + rfc;
            }
            if (address != "") {
                query = "?address=" + address;
            }
            $("#tbody").html("");
            axios.get("/Agreement/Get/List" + query).then(response => {
                var data = response.data;
                console.log("Data: ", data);
                if (data.length > 0) {
                    data.forEach(x => {
                        if ('@typePage' == "agreements") {
                            $("#tbody").append(`
                                <tr>
                                    <td>${x.account}</td>
                                    <td>${x.nombre}</td>
                                    <td>${x.address}</td>
                                    <td>${x.status}</td>
                                    <td>${x.type}</td>
                                    <td>${x.token}</td>
                                    <td>${x.isActiveDiscount ? "Activo" : "Inactivo"}</td>
                                    <td>${x.nameDiscount != "" ? x.nameDiscount : "N/A"}</td>
                                    <td>
                                        <a class="nav-link btn-flush" href="/Agreement/EditCreateView?idAgreement=${x.agreementId}" data-caret="false" style="margin: 0 auto;">
                                            <i class="fas fa-edit iconX" title="Editar"></i>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="nav-link btn-flush" onclick="GetDebts(${x.agreementId})" data-caret="false" style="margin: 0 auto;">
                                            <i class="fas fa-eye iconX" title="Ver Adeudo"></i>
                                        </a>
                                    </td>
                                    <td>
                                        <a class="nav-link btn-flush" href="/Debt/EstadoDeCuenta/${x.agreementId}" onclick="Block()" data-caret="false" style="margin: 0 auto;">
                                            <i class="fas fa-print iconX" title="Ver Estado de Cuenta"></i>
                                        </a>
                                    </td>
                                </tr>
                            `);
                        } else {
                            colspan = 9;
                            if (x.isActiveDiscount) {
                                $("#tbody").append(`
                                    <tr>
                                        <td>${x.account}</td>
                                        <td>${x.nombre}</td>
                                        <td>${x.status}</td>
                                        <td>${x.type}</td>
                                        <td>${x.isActiveDiscount ? "Activo" : "Inactivo"}</td>
                                        <td>${x.nameDiscount != "" ? x.nameDiscount : "N/A"}</td>
                                        <td>${x.endDate.slice(0, 10)}</td>
                                        <td>${x.withDiscount == true ? "CON DESCUENTO ACTIVO" : "SIN DESCUENTO ACTIVO"}</td>
                                        <td>
                                            <a class="nav-link btn-flush" onclick="ReverseVulnerable(${x.agreementId})" data-caret="false" style="margin: 0 auto;">
                                                <i class="fas fa-trash iconX" title="Eliminar"></i>
                                            </a>
                                        </td>
                                    </tr>
                                `);
                            }
                        }
                    });

                    loadDataTable("TableAgreement");
                } else {
                    $("#tbody").append(`
                        <tr>
                            <td colspan="${colspan}" style="text-align: center; font-size: 23px;">Sin Datos</td>
                        </tr>
                    `);
                    Swal.fire({
                        title: "Disculpa",
                        text: 'No se encontraron datos',
                        type: 'info',
                        showConfirmButton: true,
                    });
                }
                UnBlock();
            }).catch(error => {
                console.log(error.response);
                UnBlock();
            })
        }

        function GetDebts(idAgreement) {
            Block();
            $("#tbodyDebtsFromAgreement").html("");
            axios.get('/Debt/DebtsAgreement/' + idAgreement).then(response => {
                UnBlock();
                if (response.data.length > 0) {
                    __ListDebts = response.data;
                    console.log("__ListDebts: ", __ListDebts);
                    $("#btnModalDebts").click();
                    __ListDebts.forEach(x => {
                        var fromDate = getFormateDate(x.fromDate),
                            untilDate = getFormateDate(x.untilDate),
                            expirationDate = getFormateDate(x.expirationDate),
                            discount = "";
                        if (x.discount == "" || x.discount == null) {
                            discount = "N/A";
                        } else {
                            discount = x.discount;
                        }
                        $("#tbodyDebtsFromAgreement").append(`
                            <tr>
                                <td>${fromDate}-${untilDate}</td>
                                <td>${x.descriptionType}</td>
                                <td>${discount}</td>
                                <td>${FormatoPeso.format(x.amount)}</td>
                                <td>${FormatoPeso.format(x.onAccount)}</td>
                                <td>${expirationDate}</td>
                                <td>
                                    <a class="nav-link btn-flush" onclick="GetDebtDetails(${x.id})" data-caret="false" style="margin: 0 auto;">
                                        <i class="fas fa-eye iconX" title="Detalles de la Deuda"></i>
                                    </a>
                                </td>
                            </tr>
                        `);
                    });
                } else {
                    $("#tbodyDebtsFromAgreement").append(`
                        <tr>
                            <td colspan="8" style="text-align: center; font-size: 23px;">Sin Datos</td>
                        </tr>
                    `);
                }

            }).catch(error => {
                UnBlock();
                $("#tbodyDebtsFromAgreement").append(`
                    <tr>
                        <td colspan="8" style="text-align: center; font-size: 23px;">No se encontrarón datos</td>
                    </tr>
                `);
            });
        }

        function GetDebtDetails(idDebt) {
            //$("#btnDebtDetails").click();
            Swal.fire({
                title: '<p style="font-size: 19px; font-weight: 400;">DETALLES</p>',
                html:
                    `<div class="row">
                    <div class="col-md-12">
                        <table style="width: 100%;" id="TableDebtsDetails" class="table table-hover table-striped table-bordered">
                            <thead class="style-theads">
                                <tr>
                                    <th style="font-size:15px;" width="20%">Código</th>
                                    <th style="font-size:15px;" width="60%">Concepto</th>
                                    <th style="font-size:15px;" width="20%">Monto</th>
                                </tr>
                            </thead>
                            <tbody id="tbodyDebtsDetails"></tbody>
                        </table>
                    </div>
                </div>`,
                showConfirmButton: true,
            })
            $("#tbodyDebtsDetails").html("");
            var listDebts = __ListDebts.find(x => x.id == idDebt);

            if (listDebts.debtDetails.length > 0) {
                listDebts.debtDetails.forEach(x => {
                    $("#tbodyDebtsDetails").append(`
                        <tr>
                            <td style="font-size:14px !important; font-weight: 400;">${x.codeConcept}</td>
                            <td style="font-size:14px !important; font-weight: 400;">${x.nameConcept}</td>
                            <td style="font-size:14px !important; font-weight: 400;">${FormatoPeso.format(x.amount)}</td>
                        </tr>
                    `);
                });
            } else {
                $("#tbodyDebtsDetails").append(`
                    <tr>
                        <td colspan="3" style="text-align: center; font-size: 23px;">Sin Datos</td>
                    </tr>
                `);
            }
        }

        function ReverseVulnerable(agreementId) {
            Swal.fire({
                title: 'Se eliminará el descuento',
                text: "¿Está deacuerdo con esto?",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Aceptar'
            }).then(response => {
                if (response.value) {
                    Block();
                    axios.post('/Discounts/ReverseVulnerable/' + agreementId).then(response => {
                        UnBlock();
                        Swal.fire({
                            title: "Correcto",
                            text: response.data,
                            type: 'success',
                            showConfirmButton: true,
                        });
                    }).catch(error => {
                        UnBlock();
                        Swal.fire({
                            title: "Correcto",
                            text: error.response.data.error,
                            type: 'info',
                            showConfirmButton: true,
                        });
                    });
                }
            });
        }
    </script>
}
